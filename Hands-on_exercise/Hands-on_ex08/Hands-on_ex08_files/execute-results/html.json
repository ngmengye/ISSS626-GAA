{
  "hash": "0e909af4bd0612991c3a7a008b924fe0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 08\"\nauthor: \"Ng Meng Ye\"\n---\n\n\n# Geographically Weighted Predictive Models\n\nPredictive modelling uses statistical learning or machine learning techniques to predict outcomes.\n\nRandom forest method.\n\n### The data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n```\n:::\n\n\n\nRead the input data sets. It is in **simple feature data frame**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/mdata.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(mdata))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nfor(i in 1:nrow(mdata)) {\n  coords <- st_coordinates(mdata[i,])\n  jittered_coords <- coords + runif(n=1, min = -0.1, max = 0.1)\n  mdata[i,]$geometry <- st_sfc(st_point(c(jittered_coords),dim = \"XY\"),crs = 3414)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nany(duplicated(mdata))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\nSplit into training and test data, 65% for training, 35% for test\n`initial_split()` of **rsample**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_data, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/train_data.rds\")\nwrite_rds(test_data, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/test_data.rds\")\n```\n:::\n\n\n### Examine sign of multicollinearity\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_ex08_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nNo sign of multicolinearity, correlation value = 0.8\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/train_data.rds\")\ntest_data <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/test_data.rds\")\n```\n:::\n\n\n### Build non-spatial multiple linear regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\nfloor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\nstorey_order              14299.298    339.115  42.167  < 2e-16 ***\nremaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\nPROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\nPROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\nPROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\nPROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\nPROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\nPROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\nPROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\nWITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\nWITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\nWITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\nWITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61650 on 10320 degrees of freedom\nMultiple R-squared:  0.7373,\tAdjusted R-squared:  0.737 \nF-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\nResiduals = differences between the actual resale prices and the predicted resale prices by the model\nMedian residual is close to 0, which suggests that the model doesnt have systematic bias in its predictions.\n\nEstimate = coefficient = 2780.70 SGD resale price increase for every additional square meter in floor area.\n\nResidual standard error: standard deviation of the residuals, on average, the model's prediction is off by about SGD61,650\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(price_mlr, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/price_mlr.rds\" ) \n```\n:::\n\n\n## GWR predictive method\n\nConvert sf to spatialpointdataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 10335 \nextent      : 11597.38, 42623.68, 28217.3, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 6.20621206270077e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1186888,            133,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.86763031236184,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.27100643784442,    0.808332738794272,     1.57131703651196,                        7,                    20, ... \n```\n\n\n:::\n:::\n\n\n\nComputing adaptive bandwidth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 6395 CV score: 3.60536e+13 \nAdaptive bandwidth: 3960 CV score: 3.320316e+13 \nAdaptive bandwidth: 2455 CV score: 2.928339e+13 \nAdaptive bandwidth: 1524 CV score: 2.550955e+13 \nAdaptive bandwidth: 950 CV score: 1.956318e+13 \nAdaptive bandwidth: 593 CV score: 1.583469e+13 \nAdaptive bandwidth: 375 CV score: 1.310038e+13 \nAdaptive bandwidth: 237 CV score: 1.113155e+13 \nAdaptive bandwidth: 155 CV score: 9.572071e+12 \nAdaptive bandwidth: 101 CV score: 8.456967e+12 \nAdaptive bandwidth: 71 CV score: 7.605093e+12 \nAdaptive bandwidth: 49 CV score: 6.965771e+12 \nAdaptive bandwidth: 38 CV score: 7.599357e+12 \nAdaptive bandwidth: 58 CV score: 7.275193e+12 \nAdaptive bandwidth: 45 CV score: 6.872956e+12 \nAdaptive bandwidth: 41 CV score: 6.793108e+12 \nAdaptive bandwidth: 40 CV score: 6.780886e+12 \nAdaptive bandwidth: 38 CV score: 7.599357e+12 \nAdaptive bandwidth: 40 CV score: 6.780886e+12 \n```\n\n\n:::\n:::\n\n40 neighbour points = optimal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bw_adaptive, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/bw_adaptive.rds\")\n```\n:::\n\n\nConstruct the adaptive bandwidth gwr model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/bw_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwr_adaptive, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/gwr_adaptive.rds\")\n```\n:::\n\n\nRetrieve gwr output object\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/gwr_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 20:36:40.473558 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 10335\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-205193  -39120   -1930   36545  472355 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)              107601.073  10601.261  10.150  < 2e-16 ***\n   floor_area_sqm             2780.698     90.579  30.699  < 2e-16 ***\n   storey_order              14299.298    339.115  42.167  < 2e-16 ***\n   remaining_lease_mths        344.490      4.592  75.027  < 2e-16 ***\n   PROX_CBD                 -16930.196    201.254 -84.124  < 2e-16 ***\n   PROX_ELDERLYCARE         -14441.025    994.867 -14.516  < 2e-16 ***\n   PROX_HAWKER              -19265.648   1273.597 -15.127  < 2e-16 ***\n   PROX_MRT                 -32564.272   1744.232 -18.670  < 2e-16 ***\n   PROX_PARK                 -5712.625   1483.885  -3.850 0.000119 ***\n   PROX_MALL                -14717.388   2007.818  -7.330 2.47e-13 ***\n   PROX_SUPERMARKET         -26881.938   4189.624  -6.416 1.46e-10 ***\n   WITHIN_350M_KINDERGARTEN   8520.472    632.812  13.464  < 2e-16 ***\n   WITHIN_350M_CHILDCARE     -4510.650    354.015 -12.741  < 2e-16 ***\n   WITHIN_350M_BUS             813.493    222.574   3.655 0.000259 ***\n   WITHIN_1KM_PRISCH         -8010.834    491.512 -16.298  < 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 61650 on 10320 degrees of freedom\n   Multiple R-squared: 0.7373\n   Adjusted R-squared: 0.737 \n   F-statistic:  2069 on 14 and 10320 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 3.922202e+13\n   Sigma(hat): 61610.08\n   AIC:  257320.2\n   AICc:  257320.3\n   BIC:  247249\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 40 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3.6491e+08 -4.7734e+05 -8.2999e+03  5.5034e+05\n   floor_area_sqm           -2.8629e+04  1.4475e+03  2.2999e+03  3.3897e+03\n   storey_order              3.3187e+03  8.5905e+03  1.0826e+04  1.3396e+04\n   remaining_lease_mths     -1.4438e+03  2.6062e+02  3.9049e+02  5.2861e+02\n   PROX_CBD                 -1.0842e+07 -5.7712e+04 -1.3792e+04  2.6532e+04\n   PROX_ELDERLYCARE         -3.5472e+07 -4.0637e+04  1.0567e+04  6.1073e+04\n   PROX_HAWKER              -2.3968e+08 -5.1360e+04  2.9612e+03  6.4265e+04\n   PROX_MRT                 -1.2593e+07 -1.0489e+05 -4.9352e+04  5.0924e+03\n   PROX_PARK                -6.5948e+06 -4.8678e+04 -8.7189e+02  5.3407e+04\n   PROX_MALL                -1.8125e+07 -7.4216e+04 -1.3974e+04  4.9828e+04\n   PROX_SUPERMARKET         -4.5733e+06 -6.3446e+04 -1.7445e+04  3.5572e+04\n   WITHIN_350M_KINDERGARTEN -4.3835e+05 -6.0020e+03  9.1166e+01  4.7236e+03\n   WITHIN_350M_CHILDCARE    -1.0274e+05 -2.2353e+03  2.6660e+02  2.6409e+03\n   WITHIN_350M_BUS          -1.1794e+05 -1.4726e+03  1.1618e+02  1.7595e+03\n   WITHIN_1KM_PRISCH        -6.6487e+05 -5.5955e+03  2.6942e+02  5.7472e+03\n                                  Max.\n   Intercept                1.6501e+08\n   floor_area_sqm           5.1150e+04\n   storey_order             2.9540e+04\n   remaining_lease_mths     1.8122e+03\n   PROX_CBD                 2.5090e+07\n   PROX_ELDERLYCARE         8.2802e+07\n   PROX_HAWKER              5.9665e+06\n   PROX_MRT                 2.0174e+08\n   PROX_PARK                1.6454e+07\n   PROX_MALL                1.0485e+07\n   PROX_SUPERMARKET         3.8794e+06\n   WITHIN_350M_KINDERGARTEN 6.7207e+05\n   WITHIN_350M_CHILDCARE    1.0791e+05\n   WITHIN_350M_BUS          3.7317e+04\n   WITHIN_1KM_PRISCH        5.1300e+05\n   ************************Diagnostic information*************************\n   Number of data points: 10335 \n   Effective number of parameters (2trace(S) - trace(S'S)): 1730.083 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 8604.917 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 238871.9 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 237036.9 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 238209 \n   Residual sum of squares: 4.829219e+12 \n   R-square value:  0.9676568 \n   Adjusted R-square value:  0.9611532 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 20:37:40.981568 \n```\n\n\n:::\n:::\n\nConvert the test data from sf data.frame to SpatialPointDataFrame\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_sp <- as_Spatial(test_data)\ntest_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 5566 \nextent      : 11597.25, 42623.72, 28287.71, 48669.68  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 17\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 1.00583660772922, 3.34897933104965e-07, 0.0474019664161957, 0.0414043955932523, 0.0502664084494264, 0.0907500295577619,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            138,           14,                 1151,  19.632402730488,     3.30163731686804,   2.83106651960209,   2.13060636038504,   2.41313695915468,   10.6169590126272, 2.26056404492346,     0.79249074802552,     1.53786629004208,                        7,                    16, ... \n```\n\n\n:::\n:::\n\nComputing adaptive bandwidth for the test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 3447 CV score: 1.902156e+13 \nAdaptive bandwidth: 2138 CV score: 1.752645e+13 \nAdaptive bandwidth: 1328 CV score: 1.556298e+13 \nAdaptive bandwidth: 828 CV score: 1.357496e+13 \nAdaptive bandwidth: 518 CV score: 1.03075e+13 \nAdaptive bandwidth: 327 CV score: 8.348382e+12 \nAdaptive bandwidth: 208 CV score: 6.860524e+12 \nAdaptive bandwidth: 135 CV score: 5.969492e+12 \nAdaptive bandwidth: 89 CV score: 5.242263e+12 \nAdaptive bandwidth: 62 CV score: 4.742763e+12 \nAdaptive bandwidth: 43 CV score: 4.357877e+12 \nAdaptive bandwidth: 34 CV score: 4.125835e+12 \nAdaptive bandwidth: 25 CV score: 4.148839e+12 \nAdaptive bandwidth: 36 CV score: 4.165627e+12 \nAdaptive bandwidth: 29 CV score: 4.061362e+12 \nAdaptive bandwidth: 29 CV score: 4.061362e+12 \n```\n\n\n:::\n:::\n\nComputing predicted values of the test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# gwr_pred <- gwr.predict(formula = resale_price ~\n#                           floor_area_sqm + storey_order +\n#                           remaining_lease_mths + PROX_CBD + \n#                           PROX_ELDERLYCARE + PROX_HAWKER + \n#                           PROX_MRT + PROX_PARK + PROX_MALL + \n#                           PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n#                           WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n#                           WITHIN_1KM_PRISCH, \n#                         data=train_data_sp, \n#                         predictdata = test_data_sp,\n#                         p=2,\n#                         theta=0,\n#                         bw=40, \n#                         kernel = 'gaussian', \n#                         adaptive=TRUE, \n#                         longlat = FALSE)\n```\n:::\n\n\n## Preparing coordinates data\n\nExtract the x,y coordinates of the full, training and test data sets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n\nWrite all the output into rds for future used\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/coords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- train_data %>% \n  st_drop_geometry()\n```\n:::\n\n\nCalibrating random forest model using `ranger` package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       728602496 \nR squared (OOB):                  0.9495728 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rf, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/rf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/rf.rds\")\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      10335 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       728602496 \nR squared (OOB):                  0.9495728 \n```\n\n\n:::\n:::\n\nMtry = The number of predictor variables randomly chosen for consideration at each split in a tree.\nMtry of 3 means that 3 variables are randomly selected at each split to determine the best split.\n\nTarget node size: 5, min number of observations allowed in a terminal node of a tree.\nHere it indicates that each final node in the tree will have at least 5 observations.\n\nvariance importance mode: no additional variable importance metrics are reported in this output.\n\nSplitrule: variance = reduce the overall variancce in the target variable\n\nOut-of-bad(OOB)Prediction Error (MSE): Means Squared Error = 728602496 based on the Out-of-Bag samples.\n\nR-squared (OOB) = explain 95% of the variance in the resale prices, which indicates a very strong fit.\n\n### Calibrating Geographical Random Forest Model using `grf()` of **SpatialML** package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set.seed(1234)\n# gwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n#                        remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n#                        PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n#                        PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n#                        WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n#                        WITHIN_1KM_PRISCH,\n#                      dframe=train_data, \n#                      bw=55,\n#                      kernel=\"adaptive\",\n#                      coords=coords_train)\n```\n:::\n\nSave the model output\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write_rds(gwRF_adaptive, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/gwRF_adaptive.rds\")\n```\n:::\n\n\nRetrieve the save model\n\n::: {.cell}\n\n```{.r .cell-code}\n# gwRF_adaptive <- read_rds(\"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/gwRF_adaptive.rds\")\n```\n:::\n\n\n### Predicting the test data\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# gwRF_pred <- predict.grf(gwRF_adaptive, \n#                            test_data, \n#                            x.var.name=\"X\",\n#                            y.var.name=\"Y\", \n#                            local.w=1,\n#                            global.w=0)\n```\n:::\n\n\nSave the output into rds file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GRF_pred <- write_rds(gwRF_pred, \"C:/ngmengye/ISSS626-GAA/Hands-on_exercise/Hands-on_ex08/data/GRF_pred.rds\")\n```\n:::\n",
    "supporting": [
      "Hands-on_ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}